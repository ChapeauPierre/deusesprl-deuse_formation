# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}

server {
    listen 80;
    listen 443 ssl;

    server_name deuse_formation.deuse.dev;
    charset utf-8;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    # Security headers

    # Strict-Transport-Security is an excellent feature that strengthens the implementation of TLS by
    # getting the User Agent to enforce the use of HTTPS.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops
    # pages from loading when they detect reflected cross-site scripting (XSS) attacks
    add_header X-XSS-Protection "1; mode=block" always;

    # X-Content-Type-Options response HTTP header is a marker used by the server to indicate that the
    # MIME types advertised in the Content-Type headers should not be changed and be followed.
    add_header X-Content-Type-Options "nosniff" always;

    # X-Frame-Options tells the browser whether you want to allow the site to be framed or not. By preventing
    # a browser from framing the site you can defend against attacks like clickjacking.
    add_header X-Frame-Options "SAMEORIGIN" always; # "Allow-From domain.com"

    # Referrer Policy is a new header that allows a site to control how much information the browser includes
    # with navigations away from a document and should be set by all sites.
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Permissions Policy is a new header that allows a site to control which features and APIs can be used in the browser.
    add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;

    # Set-Cookie HTTP response header is used to send a cookie from the server to the user agent, so the user
    # agent can send it back to the server later
    add_header Set-Cookie "Path=/; HttpOnly; Secure";

    # /!\ Can prevent the project from working if not setup correctly ! /!\
    # Content Security Policy is an effective measure to protect your site from XSS attacks. By whitelisting
    # sources of approved content, you can prevent the browser from loading malicious assets.
    # add_header Content-Security-Policy: "default-src 'self' https; script-src 'self' 'unsafe-inline' maps.googleapis.com" always;

    expires $expires;

    location /static {
        alias /usr/src/app/collectstatic/;
        add_header Cache-Control "public";

        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)$ {
            access_log off;
            expires 30d;

            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;

            ## Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
        }
    }

    location /media/ {
        alias   /usr/src/app/media/;
        add_header Cache-Control "public";

        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|html|xml|otf|ttf|eot|woff|woff2|svg)$ {
            access_log off;
            expires 30d;

            ## No need to bleed constant updates. Send the all shebang in one
            ## fell swoop.
            tcp_nodelay off;

            ## Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;
        }
    }

    location / {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /flower/ {
        proxy_pass http://flower:5555;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        auth_basic  "Restricted";
        auth_basic_user_file  /etc/nginx/.htpasswd;
    }

    client_max_body_size 32M;
}
